[["index.html", "Modelización estadística avanzada con R: análisis de datos longitudinales Capítulo 1 Preámbulo 1.1 Instalación de librerías necesarias para el curso", " Modelización estadística avanzada con R: análisis de datos longitudinales Juan R González 2021-09-08 Capítulo 1 Preámbulo Este bookdown sirve como notas para el curso Modelización estadística avanzada con R: análisis de datos longitudinales impartido en el Insituto Aragonés de Ciencias de la Salud El contenido del curso tiene los siguientes temas: Módulo 1: Modelos lineales para datos longitudinales continuos (I) Introducción Formato de datos Visualización de datos longitudinales ANOVA para medidas repetidas MANOVA Módulo 2: Modelos lineales para datos longitudinales continuos (II) Modelos mixtos Otros modelos: GLS, GEE Módulo 3: Análisis de supervivencia con eventos recurrentes (I) Breve introducción al análisis de supervivencia Modelos condicionales y marginales Modelos de fragilidad Módulo 4: Modelización conjunta de datos longitudinales y de supervivencia Introducción Joint models 1.1 Instalación de librerías necesarias para el curso Para poder reproducir todo el código de este libro se necesitan tener instaladas las siguientes librería install.packages(c(&quot;tidyverse&quot;, &quot;dplyr&quot;, &quot;magrittr&quot;, &quot;ggplot2&quot;, &quot;reshape2&quot;, &quot;ez&quot;, &quot;MANOVA.RM&quot;)) Los datos están accesibles en esta carpeta https://github.com/isglobal-brge/curso_longitudinal/tree/main/datos Este material está licenciado bajo una Creative Commons Attribution 4.0 International License. "],["intro.html", "Capítulo 2 Introducción a los diseños de datos longitudinales 2.1 Definición 2.2 Ejemplos 2.3 Esquemas de recogidas de datos", " Capítulo 2 Introducción a los diseños de datos longitudinales 2.1 Definición Un diseño longitudinal se obtiene cuando obtenemos distintas medidas de un sujeto a lo largo del tiempo. Por esto a veces a este tipo de datos también se les llama de medidas repetidas. En cada momento del tiempo se realiza una medida de una variable o de variables variables. Esta variable o variables diremos que serán cambiantes en el tiempo o tiempo-dependientes. En los diseños longitudinales típicamente se tiene una variable medida en distintos momentos del tiempo que será la variable respuesta (que normalmente queremos predecir o explicar) y opcionalmente otras variables que pueden medirse sólo en el momento basal o inicial o también pueden ser variables tiempo-dependientes. Hay variables que, aunque cambien en el tiempo, como puede ser la edad, como lo hace igual para todos, no se considerará tiempo-dependiente. Y otras que són constantes como el sexo. Los objetivos pueden ser distintos: Estudiar la evolución de una variable a lo largo del tiempo. Esto es equivalente a evaluar el efecto que tiene el tiempo sobre esta variable. Ver si la evolución de una variable a lo largo del tiempo es la misma en diferentes grupos. Por ejemplo ver si la concentración de un fármaco evoluaciona de la misma manera que otro fármaco ó placebo. Identificar patrones en la evolución o cambio de una variable a lo largo del tiempo. En este contexto se pueden usar técnicas basadas en las distancias entre curvas (que no se explicarán en este curso). 2.2 Ejemplos Ejemplo 1 En un estudio de intervención de dieta se reclutan 100 individuos por grupo. Estos grupos son (1) grupo control: se sigue una dieta mediterránea; (2) grupo de frutos secos: la dieta mediterranea es complementada con una cantidad de nueces; (3) grupo de aceite de oliva: a la dieta mediterránea se le añade una cantidad de aceite de oliva virgen. A lo largo de los siete años que dura el estudio, cada participante es visitado y se le toman distintas medidas desde cuestionarios de dieta, actividad física, medidas antropométricas (peso, talla), la tensión arterial, o medidas en sangre (perfil lipídico, etc.). No todos los individuos acuden en todas las visitas con lo cual aparecen datos faltantes. Además, por motivos de enfermedad o de muerte, algunos de alguno de ellos no se tiene la información de las visitas finales, dando lugar a distintos tiempos de seguimiento. Ejemplo 2 A fin de comparar tres medicamentos (A, B y C) para reducir el colesterol, se reclutan 30 voluntarios, todos ellos diagnosticados de hipercolesterolemia y de entre 40 y 60 años de edad. Cada partipante se le asigna uno de los tres medicamentos al azar de forma que 10 de ellos toman el medicamento A, otros el medicamento B y los 10 restantes el medicamento C. Se miden los niveles de colesterol total en sangre (en mg/dL) justo en el inicio del estudio y cada 7 días en ayunas, a lo largo de 12 semanas. Ejemplo 3 En un estudio sobre la polución ambiental en zonas urbanas, se eligen al azar 15 ciudades de más de 100.000 habitantes. De cada ciudad se eligen 4 puntos al azar con alta densidad de tráfico. En cada punto se realizan 10 medidas desde las 8h de la mañana hasta las 17h de la tarde con intervalos de 60 minutos, en un día entre semana. Ejemplo 4 Se quiere estudiar la población de una especie de alga en aguas marinas poco profundas. Para ello se muestrean veinte puntos al azar lo largo de la costa y a una distancia de aproximadamente un quilómetro de la playa. En cada punto se recoge una muestra a dos, cuatro, seis, ocho y diez metros de profundidas. Finalmente, en cada muestra se contabilizan el número de especímenes que hay por centímetro cúbico de agua. Ejemplo 5 En un estudio farmacocinético, se inyecta una cierta cantidad de un componente farmacológico en sangre. Se reclutan 15 individuos y para cada uno de ellos se mide cada hora la concentración en sangre. Se puede estudiar las características de la curva de la concentración a lo largo del tiempo resumiendo todos los datos de concentración en un solo valor como es el AUC, o el tiempo de inflexión, etc. O bien, se puede analizar la concentración en cada punto desde el punto de vista de medidas repetidas. Este ejemplo también se podría tratar como análisis funcional, viendo los datos de cada individuo como una función del tiempo. Ejemplo 6 En un estudio sobre la adherencia a un medicamento, se hacen visitas mensuales a los participantes y en cada visita se pregunta si toma o no el medicamento con las dosis adecuadas, siendo la variable medida binaria (sí/no). Ejemplo 7 En un estudio se quiere ver la eficacia de una dieta rica en aceite de oliva sobre los niveles de colesterol triglicéridos. Para ello se reculatan 3,000 participantes que son aleatorizados al grupo de tratamiento basado en una dieta enriquecida con aceite de oliva y a un grupo control a los que sólo se les indica que sigan una dieta saludable y pobre en grasas. Cada participante se visita anualmente durante sieta años en que se mide, entre otras variables los niveles de triglicéridos. A fin de asegurar o evaluar hasta qué punto los participantes siguen la dieta que les ha tocado, también se mide en cada visita un parámetro en sangre sensible a la cantidad de aceite de oliva ingerido. No serían medidas repetidas: Expresión génica de distintos genes. En este ejemplo cada gen sería una variable distinta; nos podría interesar comparar los niveles de expresión entre distintos genes. Éste sería un ejemplo de muchas variables respuesta. Datos de seguimiento en el que se quiere estudiar la incidencia de diabetes. Para ello se hacen distintas visitas y se reporta en cada visita si el paciente es diabético o no. En este ejemplo, cada medida se toma o se mide si y solo si en la medida anterior el resultado es negativo. Sería un ejemplo de análisis de supervivencia con tiempo discreto. Si tenemos sólo dos medidas, aunque estrictamente son medidas repetidas, se pueden usar técnicas y modelos estándard. Por ejemplo, si la variable es continua se puede trabajar con la diferencia (después - antes) como la varaible respuesta y ajustar por el valor basal. Si tenemos distintas medidas pero no sabemos cuando o en qué orden se han recogido. Por ejemplo, si tenemos 3 medidas de tensión arterial para cada individuo pero no sabemos el orden en que se han tomado las medidas. En este caso, se trataría o analizaría como datos en clúster. Alternativamente se puede calcular la media para cada individuo y trabajar con modelo estándar con un sólo dato por individuo. 2.3 Esquemas de recogidas de datos 2.3.1 Todas las medidas con intervalos fijos Medidas tomadas en los momentos \\(t_1\\), \\(t_2\\), , \\(t_5\\). El intervalo transcurrido entre dos medidas puede ser constante o no. Pero son las mismas para todos los individuos. En caso que el intervalo no sea constante es importante anotar en qué momentos (segundos, minutos, horas, días, o metros) se han hecho las medidas. 2.3.2 Missings al azar con intervalos fijos No todos los individuos tienen datos observados en todos los tiempos. Es importante que estos datos faltantes ocurran al azar para poder considerar los modelos que vamos a ver en este curso como correctos. 2.3.3 Distintos seguimientos Algunos individuos son seguidos a lo largo del tiempo en más visitas que otros. 2.3.4 Todas las medidas a distintos tiempos Los datos anteriores se consideran estudios de datos panel. Es decir, los datos se recogen de forma diara, semanal, anual, etc. (a tiempo fijo). Sin embargo, lo más habitual es disponer de observaciones en distintos tiempos para cada individuo y distintos número de observaciones para cada individuo. "],["estructura-de-los-datos.html", "Capítulo 3 Estructura de los datos 3.1 Formato ancho y largo 3.2 Formato ancho 3.3 Formato largo 3.4 Valores faltantes 3.5 Tiempos de medidas diferentes 3.6 Transformación", " Capítulo 3 Estructura de los datos 3.1 Formato ancho y largo Una vez que hemos recogido nuestros datos, debemos proceder con un análisis descriptivo para saber qué modelo debemos usar con el fin de contestar a las preguntas científicas planteadas en el estudio. La organización y visualización de los datos en estudios longitudinales no es tan sencilla como en cualquier otro tipo de diseño ya que los datos se pueden organizar de formas distintas. Básicamente, podemos: Datos a nivel de individuo, en el que cada individuo tiene un registro y múltiples variables contienen los datos de cada ocasión de medición (datos en formato ancho - wide format en inglés). Datos a nivel de tiempo, en el que cada persona tiene varios registros, uno para cada ocasión de medición (datos en formato largo - long format en inglés). Las funciones que tenemos en R tanto para visualizar como modelizar datos longitudinales puede requerir el tener los datos en cualquiera de los dos formatos. El formato largo normalmente se necesita para agrupar variables como por ejemplo si queremos visualizar nuestra información mediante gráficos de barras apilados. En R existen muchas funciones para pasar de formato ancho a largo y viceversa. Recientemente se han creado las fuciones dcast() y melt() en la librería reshape2 que facilitan enormemente estas tareas. La siguiente figura muestra un ejemplo de cómo utilizar estas funciones: Figura 3.1: Datos en formato ancho y largo y cómo pasar de un formato a otro usando funciones de la librería reshape2 Veamos cómo realizarlo con R. Empecemos por cargar los datos que hemos visto en el ejemplo anterior datos &lt;- read.delim(&quot;datos/ejemplo.txt&quot;) datos id sexo colesterol_1 colesterol_2 colesterol_3 1 1 hombre 223 234 241 2 2 hombre 189 190 191 3 3 mujer 210 204 190 Vemos que están en formato ancho. Podemos pasarlos a formato largo utilizando la función melt() que tiene los siguientes argumentos: data es el objeto (data.frame o tibble) que vamos a convertir de ancho a largo, id.vars son las variables en la tabla que vamos a dejar sin cambiar de dimensión. En nuestro ejemplo sería la variable sexo, aunque pueden ser más en tablas más complejas. Puede usarse un vector de nombres (tipo character) o de números enteros que correspondan al número de columna. measure.vars son las variables en las que se encuentran las mediciones. Puede ser un vector de nombres o de números enteros indicando los índices de las columnas. En nuestro caso son las columnas 3 a 5. variable.name es el nombre que va a adoptar la columna en la que queden nuestras variables, es decir, en nuestro caso sería el tiempo. Por defecto usa variable. value.name es el nombre que va a adoptar la columna en la que queden los valores, que en nuestro caso sería el colestero. Por defecto usa value. variable.factor es una valor lógico (TRUE o FALSE) para indicar si queremos que la columna de variable quede convertida a factor (opción por defecto), o quede simplemente como caracter. Veamos cómo aplicamos esto a nuestro ejemplo library(reshape2) datos_largo &lt;- melt(datos, measure.vars=3:5, variable.name = &quot;tiempo&quot;, value.name = &quot;colesterol&quot;) datos_largo id sexo tiempo colesterol 1 1 hombre colesterol_1 223 2 2 hombre colesterol_1 189 3 3 mujer colesterol_1 210 4 1 hombre colesterol_2 234 5 2 hombre colesterol_2 190 6 3 mujer colesterol_2 204 7 1 hombre colesterol_3 241 8 2 hombre colesterol_3 191 9 3 mujer colesterol_3 190 Notemos que nuestra variable tiempo no es numérica indicando el momento donde se toma la medida de colesterol. Debería de ser una variable numérica 1, 2, 3. Podemos solucionar esto eliminando colesterol_ de la variable simplemente ejecutando: library(tidyverse) datos_largo &lt;- mutate(datos_largo, tiempo = str_remove(tiempo, &quot;colesterol_&quot;) %&gt;% as.numeric()) datos_largo id sexo tiempo colesterol 1 1 hombre 1 223 2 2 hombre 1 189 3 3 mujer 1 210 4 1 hombre 2 234 5 2 hombre 2 190 6 3 mujer 2 204 7 1 hombre 3 241 8 2 hombre 3 191 9 3 mujer 3 190 Podemos ordenar nuestros datos por individuo y tiempo de la siguiente manera datos_largo &lt;- arrange(datos_largo, id, tiempo) datos_largo id sexo tiempo colesterol 1 1 hombre 1 223 2 1 hombre 2 234 3 1 hombre 3 241 4 2 hombre 1 189 5 2 hombre 2 190 6 2 hombre 3 191 7 3 mujer 1 210 8 3 mujer 2 204 9 3 mujer 3 190 Veamos ahora cómo pasar de formato largo a ancho. Para esta tarea usamos la función dcast(). Esta función tiene una notación un poco diferente, pues usa fórmulas para determinar qué variables poner en cada lugar. Tiene los siguientes argumentos: data es la tabla que vamos a convertir, formula es la forma en que vamos a distribuir las columnas. En general la fórmula es de forma x ~ y. Se puede usar una regla nemotécnica que consiste en: filas ~ columnas. drop deberían los valores faltantes ser eliminados o mantenidos?. Por defecto es TRUE y no se ponen. value.var es el nombre (o número) de la columna en la que están los valores. Generalmente dcast() adivina bien este valor, pero es bueno usarlo para asegurarnos de lo que estamos haciendo y evitar que salga un mensaje de advertencia. En nuestro caso ejecutaríamos: datos_ancho &lt;- dcast(datos_largo, id ~ tiempo, value.var = &quot;colesterol&quot;) datos_ancho id 1 2 3 1 1 223 234 241 2 2 189 190 191 3 3 210 204 190 Si queremos mantener el resto de covariables debemos ejecutar: datos_ancho &lt;- dcast(datos_largo, id + sexo ~ tiempo, value.var = &quot;colesterol&quot;) datos_ancho id sexo 1 2 3 1 1 hombre 223 234 241 2 2 hombre 189 190 191 3 3 mujer 210 204 190 que es justo el conjunto de datos inicial del que partíamos excepto por el nombre de las variables (que ahora se llaman 1, 2, 3). Para poder poner el nombre original, basta con ejecutar: datos_ancho &lt;- dcast(datos_largo, id + sexo ~ paste0(&quot;colesterol_&quot;, tiempo), value.var = &quot;colesterol&quot;) datos_ancho id sexo colesterol_1 colesterol_2 colesterol_3 1 1 hombre 223 234 241 2 2 hombre 189 190 191 3 3 mujer 210 204 190 Veamos ahora ejemplos más reales donde tenemos más de una variable repetida a lo largo del tiempo, datos faltantes u datos recogidos en distintos tiempos. 3.2 Formato ancho Como hemos comentado anteriormente, lo normal es recoger los datos en formato ancho (u horizontal) data su simplicidad. ind sexo edad coltot_1 coltot_2 coltot_3 bmi_1 bmi_2 bmi_3 1 1 44 213 220 199 33.3 30.9 28.3 2 0 45 196 238 218 31.1 29.1 30.1 3 1 55 195 218 216 28.5 30.0 27.9 4 0 51 201 194 201 32.5 31.4 24.5 5 1 46 234 185 189 30.1 31.9 27.7 6 0 51 213 183 214 30.4 28.8 28.3 La ventaja de esta estrategia es que tenemos una fila para cada individuo, como estamos acostumbrados. Sin embargo, existen varios inconvenientes: Si tenemos un missing en alguna medida hay que eliminar a todo el individuo Debemos suponer que todas las medidas se han realizado en los mismos momentos para todos los individuos, y esto puede no ser cierto. Las diferentes medidas de una misma variable predictora la debemos analizar como si fueran distintas variables 3.3 Formato largo Estos mismos datos se dispondrían de la siguiente forma en formato largo (o vertical) ind sexo edad coltot bmi momento 1 1 44 213 33.3 1 1 1 44 220 30.9 2 1 1 44 199 28.3 3 2 0 45 196 31.1 1 2 0 45 238 29.1 2 2 0 45 218 30.1 3 3 1 55 195 28.5 1 3 1 55 218 30.0 2 3 1 55 216 27.9 3 4 0 51 201 32.5 1 4 0 51 194 31.4 2 4 0 51 201 24.5 3 5 1 46 234 30.1 1 5 1 46 185 31.9 2 5 1 46 189 27.7 3 6 0 51 213 30.4 1 6 0 51 183 28.8 2 6 0 51 214 28.3 3 3.4 Valores faltantes Cuando hay valores faltantes en una medida y los datos se disponen de forma horizontal se descartan los demás valores ya que se elimina toda la fila. ind sexo edad coltot_1 coltot_2 coltot_3 bmi_1 bmi_2 bmi_3 1 1 44 213 220 199 33.3 30.9 28.3 2 0 45 196 NA 218 31.1 29.1 30.1 3 1 55 195 218 216 28.5 30.0 27.9 4 0 51 201 194 201 32.5 31.4 24.5 5 1 46 234 185 NA 30.1 31.9 27.7 6 0 51 213 183 214 30.4 28.8 28.3 En cambio, en la disposición vertical sólo se pierden los valores de los tiempos en cuestión y no todas las medidas del individuo. ind sexo edad coltot bmi momento 1 1 44 213 33.3 1 1 1 44 220 30.9 2 1 1 44 199 28.3 3 2 0 45 196 31.1 1 2 0 45 NA 29.1 2 2 0 45 218 30.1 3 3 1 55 195 28.5 1 3 1 55 218 30.0 2 3 1 55 216 27.9 3 4 0 51 201 32.5 1 4 0 51 194 31.4 2 4 0 51 201 24.5 3 5 1 46 234 30.1 1 5 1 46 185 31.9 2 5 1 46 NA 27.7 3 6 0 51 213 30.4 1 6 0 51 183 28.8 2 6 0 51 214 28.3 3 3.5 Tiempos de medidas diferentes Al disponer los datos de forma vertical se puede especificar en qué momento se ha recogido cada medida. Para ello simplemente se indica en la variable tiempo. Por ejemplo si se trata de los días que han pasado desde el momento inicial del experimento. ind sexo edad coltot bmi momento dias 1 1 44 213 33.3 1 1 1 1 44 220 30.9 2 4 1 1 44 199 28.3 3 5 2 0 45 196 31.1 1 3 2 0 45 238 29.1 2 7 2 0 45 218 30.1 3 10 3 1 55 195 28.5 1 2 3 1 55 218 30.0 2 7 3 1 55 216 27.9 3 8 4 0 51 201 32.5 1 2 4 0 51 194 31.4 2 8 4 0 51 201 24.5 3 9 5 1 46 234 30.1 1 1 5 1 46 185 31.9 2 9 5 1 46 189 27.7 3 10 6 0 51 213 30.4 1 3 6 0 51 183 28.8 2 6 6 0 51 214 28.3 3 10 O incluso podemos tener mas medidas para unos individuos que para otros. Como sería el caso que tuviéramos algún missing en alguna medida. Como en este ejemplo, para el individuo 2 y el 5 tenemos sólo 2 medidas, mientras que para el resto tenemos 3. ind sexo edad coltot bmi momento dias 1 1 44 213 33.3 1 1 1 1 44 220 30.9 2 4 1 1 44 199 28.3 3 5 2 0 45 196 31.1 1 3 2 0 45 218 30.1 3 10 3 1 55 195 28.5 1 2 3 1 55 218 30.0 2 7 3 1 55 216 27.9 3 8 4 0 51 201 32.5 1 2 4 0 51 194 31.4 2 8 4 0 51 201 24.5 3 9 5 1 46 234 30.1 1 1 5 1 46 185 31.9 2 9 6 0 51 213 30.4 1 3 6 0 51 183 28.8 2 6 6 0 51 214 28.3 3 10 3.6 Transformación 3.6.1 Vertical a horizontal y viceversa En esta sección aprovecharemos para ver otras instrucciones útiles en R para pasar de la disposición vertical de los datos a la horizontal y viceversa (aunque yo recomiendo usar melt() y dcast(). Para ello usaremos los datos del ejemplo anterior que están guardados en formato .csv de la siguiente manera: tablahorizontal &lt;- read.csv2(&quot;datos/tablahorizontal.csv&quot;) tablahorizontal ind sexo edad coltot_1 coltot_2 coltot_3 bmi_1 bmi_2 bmi_3 1 1 1 44 213 220 199 33.3 30.9 28.3 2 2 0 45 196 238 218 31.1 29.1 30.1 3 3 1 55 195 218 216 28.5 30.0 27.9 4 4 0 51 201 194 201 32.5 31.4 24.5 5 5 1 46 234 185 189 30.1 31.9 27.7 6 6 0 51 213 183 214 30.4 28.8 28.3 Como tenemos la base de datos en horizontal (una fila por individuo) y la queremos pasar a vertical (un registro por fila y varias filas por individuo) podemos usar: tablong &lt;- reshape(data=tablahorizontal, direction=&quot;long&quot;, varying=list(c(&quot;coltot_1&quot;,&quot;coltot_2&quot;,&quot;coltot_3&quot;), c(&quot;bmi_1&quot;,&quot;bmi_2&quot;,&quot;bmi_3&quot;)), times=1:3, timevar=&quot;momento&quot;, idvar=&quot;ind&quot;, v.names=c(&quot;coltot&quot;,&quot;bmi&quot;)) tablong ind sexo edad momento coltot bmi 1.1 1 1 44 1 213 33.3 2.1 2 0 45 1 196 31.1 3.1 3 1 55 1 195 28.5 4.1 4 0 51 1 201 32.5 5.1 5 1 46 1 234 30.1 6.1 6 0 51 1 213 30.4 1.2 1 1 44 2 220 30.9 2.2 2 0 45 2 238 29.1 3.2 3 1 55 2 218 30.0 4.2 4 0 51 2 194 31.4 5.2 5 1 46 2 185 31.9 6.2 6 0 51 2 183 28.8 1.3 1 1 44 3 199 28.3 2.3 2 0 45 3 218 30.1 3.3 3 1 55 3 216 27.9 4.3 4 0 51 3 201 24.5 5.3 5 1 46 3 189 27.7 6.3 6 0 51 3 214 28.3 Ordeno la tabla por id y dentro de cada id por tiempo tablong &lt;- arrange(tablong, ind, momento) tablong ind sexo edad momento coltot bmi 1.1 1 1 44 1 213 33.3 1.2 1 1 44 2 220 30.9 1.3 1 1 44 3 199 28.3 2.1 2 0 45 1 196 31.1 2.2 2 0 45 2 238 29.1 2.3 2 0 45 3 218 30.1 3.1 3 1 55 1 195 28.5 3.2 3 1 55 2 218 30.0 3.3 3 1 55 3 216 27.9 4.1 4 0 51 1 201 32.5 4.2 4 0 51 2 194 31.4 4.3 4 0 51 3 201 24.5 5.1 5 1 46 1 234 30.1 5.2 5 1 46 2 185 31.9 5.3 5 1 46 3 189 27.7 6.1 6 0 51 1 213 30.4 6.2 6 0 51 2 183 28.8 6.3 6 0 51 3 214 28.3 Y si queremos pasar del formato largo al horizontal tablavertical &lt;- read.csv2(&quot;datos/tablavertical.csv&quot;) tablavertical ind sexo edad coltot bmi momento dias 1 1 1 44 213 33.3 1 1 2 1 1 44 220 30.9 2 4 3 1 1 44 199 28.3 3 5 4 2 0 45 196 31.1 1 3 5 2 0 45 238 29.1 2 7 6 2 0 45 218 30.1 3 10 7 3 1 55 195 28.5 1 2 8 3 1 55 218 30.0 2 7 9 3 1 55 216 27.9 3 8 10 4 0 51 201 32.5 1 2 11 4 0 51 194 31.4 2 8 12 4 0 51 201 24.5 3 9 13 5 1 46 234 30.1 1 1 14 5 1 46 185 31.9 2 9 15 5 1 46 189 27.7 3 10 16 6 0 51 213 30.4 1 3 17 6 0 51 183 28.8 2 6 18 6 0 51 214 28.3 3 10 tabwide &lt;- reshape(data=tablavertical, direction=&quot;wide&quot;, v.names=c(&quot;coltot&quot;,&quot;bmi&quot;), times=1:3, timevar=&quot;momento&quot;, idvar=&quot;ind&quot;) tabwide ind sexo edad dias coltot.1 bmi.1 coltot.2 bmi.2 coltot.3 bmi.3 1 1 1 44 1 213 33.3 220 30.9 199 28.3 4 2 0 45 3 196 31.1 238 29.1 218 30.1 7 3 1 55 2 195 28.5 218 30.0 216 27.9 10 4 0 51 2 201 32.5 194 31.4 201 24.5 13 5 1 46 1 234 30.1 185 31.9 189 27.7 16 6 0 51 3 213 30.4 183 28.8 214 28.3 ¿Y si tenemos algun individuo con menos medidas? Por ejemplo, tenemos la tabla en formato vertical y para el individuo id=1 tenemos dos medidas en lugar de 3 (quitamos la tercera medida) tablaverticalmiss &lt;- tablavertical[-3,] tablaverticalmiss ind sexo edad coltot bmi momento dias 1 1 1 44 213 33.3 1 1 2 1 1 44 220 30.9 2 4 4 2 0 45 196 31.1 1 3 5 2 0 45 238 29.1 2 7 6 2 0 45 218 30.1 3 10 7 3 1 55 195 28.5 1 2 8 3 1 55 218 30.0 2 7 9 3 1 55 216 27.9 3 8 10 4 0 51 201 32.5 1 2 11 4 0 51 194 31.4 2 8 12 4 0 51 201 24.5 3 9 13 5 1 46 234 30.1 1 1 14 5 1 46 185 31.9 2 9 15 5 1 46 189 27.7 3 10 16 6 0 51 213 30.4 1 3 17 6 0 51 183 28.8 2 6 18 6 0 51 214 28.3 3 10 tabwidemiss &lt;- reshape(data=tablaverticalmiss, direction=&quot;wide&quot;, v.names=c(&quot;coltot&quot;,&quot;bmi&quot;), times=1:3, timevar=&quot;momento&quot;, idvar=&quot;ind&quot;) tabwidemiss ind sexo edad dias coltot.1 bmi.1 coltot.2 bmi.2 coltot.3 bmi.3 1 1 1 44 1 213 33.3 220 30.9 NA NA 4 2 0 45 3 196 31.1 238 29.1 218 30.1 7 3 1 55 2 195 28.5 218 30.0 216 27.9 10 4 0 51 2 201 32.5 194 31.4 201 24.5 13 5 1 46 1 234 30.1 185 31.9 189 27.7 16 6 0 51 3 213 30.4 183 28.8 214 28.3 3.6.2 Colapsar Si tenemos los datos en vertical y queremos colapsar o resumir los distintos datos de cada individuo en un único valor, como por ejemplo la media. library(dplyr) library(magrittr) group_by(tablavertical, ind) %&gt;% summarise_at(vars(coltot, bmi), list(media = mean)) # A tibble: 6 x 3 ind coltot_media bmi_media &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; 1 1 211. 30.8 2 2 217. 30.1 3 3 210. 28.8 4 4 199. 29.5 5 5 203. 29.9 6 6 203. 29.2 "],["visualización-de-datos-longitudinales.html", "Capítulo 4 Visualización de datos longitudinales 4.1 Trayectorias 4.2 Spaghetti plots", " Capítulo 4 Visualización de datos longitudinales Para ilustrar cómo visualizar datos longitudinales usaremos los datos que se encuentran en formato ancho obtenidos de UCLA web site. Este ejemplo pertenece a un estudio realizado en adolescentes en el que se ha medido su tolerancia a tener un comportamiento que se desvia de lo habitual usando 9 items (medidos en una escala de 1 a 4 que va de un comportamiento muy malo hasta para nada malo) que se resumen con la media del valor obtenido en cada uno de ellos. Además del sexo del adolescente, también se ha recogido una variable (exposure) que corresponde a la respuesta autoreportada por el adolescente a los 11 años de su exposición a tener un comportamiento que anómalo Los datos podemos cargarlos de la forma habitual, pero teniendo en cuenta que se encuentran en formato csv. Notemos que no hace falta descargarlos en nuestro ordenador y cargarlos desde ahí, ya que la función read_csv acepta que los datos estén en un repositorio en la red (basta con indicar su URL). library(tidyverse) tolerance &lt;- read_csv(&quot;https://stats.idre.ucla.edu/wp-content/uploads/2016/02/tolerance1.txt&quot;) head(tolerance) # A tibble: 6 x 8 id tol11 tol12 tol13 tol14 tol15 male exposure &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 9 2.23 1.79 1.9 2.12 2.66 0 1.54 2 45 1.12 1.45 1.45 1.45 1.99 1 1.16 3 268 1.45 1.34 1.99 1.79 1.34 1 0.9 4 314 1.22 1.22 1.55 1.12 1.12 0 0.81 5 442 1.45 1.99 1.45 1.67 1.9 0 1.13 6 514 1.34 1.67 2.23 2.12 2.44 1 0.9 Con los datos en este formato, podemos aprovechar para obtener algunas estadísticas descriptivas que pueden resultar de interés. Por ejemplo, podemos ver cuántos individuos tenemos en nuestro estudio simplemente ejecutando: nrow(tolerance) [1] 16 4.1 Trayectorias Para poder crear gráficos que nos informen sobre la evolución de la tolerancia entre individuos necesitamos que los datos estén en formato largo. Como hemos visto anteriormente, esto lo podemos realizar mediante library(reshape2) tolerance2 &lt;- melt(tolerance, measure.vars=2:6, variable.name = &quot;age&quot;, value.name = &quot;tolerance&quot;) # no nos olvidemos que nuestra variable edad # debe de ser numérica tolerance2 &lt;- mutate(tolerance2, age = str_remove(age,&quot;tol&quot;)%&gt;% as.numeric()) head(tolerance2) id male exposure age tolerance 1 9 0 1.54 11 2.23 2 45 1 1.16 11 1.12 3 268 1 0.90 11 1.45 4 314 0 0.81 11 1.22 5 442 0 1.13 11 1.45 6 514 1 0.90 11 1.34 Puesto que nuestras observaciones para cada individuo se presenta a distintas edades, por eso hemos llamado age a nuestra variable temporal. Con los datos en este formato no resulta tan sencillo saber cuántos individuos estamos analizando. Podemos usar tidyverse para obtener esta información tolerance2 %&gt;% distinct(id) %&gt;% nrow() [1] 16 NOTA: Para aquellos que no realizaron el último curso de R en el que se explicó tidyverse, se puede consultar este material. Podemos empezar por visualizar nuestros datos creando lo que se conoce como Empirical growth plots o que nos nuestra la secuencia de nuestra variable de interés a lo largo del tiempo para cada individuo. En nuestro paso pondremos age en el eje X y tolerance en el Y. Para ello utilizaremos la función geom_point() y para crear el panel individual para cada sujeto usaremos facet_wrap() ambas son funciones de la librería ggplot2. library(ggplot2) ggplot(tolerance2, aes(x = age, y = tolerance)) + geom_point() + facet_wrap(~id) Por defecto, ggplot2 mantiene las escalas de ambos ejes iguales en todos los paneles. Si queremos que sea distinto entre cada individuo, podemos modificar el argumento scales en la función facet_wrap(). Podemos añadir una línea para conectar los puntos usando geom_line() ggplot(tolerance2, aes(x = age, y = tolerance)) + geom_point() + geom_line() + facet_wrap(~id) Sin embargo, a veces es recomendable utilizar otras aproximaciones que nos ayuden a visualizar mejor cuál es la trayectoria de cada individuo. Para ello, se puede utilizar otras aproximaciones como: suavizado no paramétrico funciones paramétricas El suavizado paramétrico se puede llevar acabo usando un suavizado de tipo loess. Podemos usar esta opción mediante la función stat_smooth() y controlar el grado de suavizado con el argumento span. ggplot(tolerance2, aes(x = age, y = tolerance)) + geom_point() + stat_smooth(method = &quot;loess&quot;, se = FALSE, span = .9) + facet_wrap(~id) NOTA: El argumento se=FALSE sirve para que no pintemos la banda de confianza para la estimación no paramétrica. Podemos visualizar las trayectorias usando un modelo paramétrico. El más sencillo sería un modelo lineal que podemos visualizar mediante el argumento method = 'lm' ggplot(tolerance2, aes(x = age, y = tolerance)) + geom_point() + stat_smooth(method = &quot;lm&quot;, se = FALSE) + facet_wrap(~id) 4.2 Spaghetti plots También podemos visualizar todas las trayectorias en único gráfico mediante lo que se conoce como un spaghetti plot. Esta representación es muy útil cuando queremos visualizar muchos individuos. Para ello deberíamos usar el argumento group ggplot(tolerance2, aes(x = age, y = tolerance, group = id)) + geom_line() También podemos añadir el perfil promedio ggplot(tolerance2, aes(x = age, y = tolerance, group = id)) + geom_line(col=&quot;grey&quot;) + stat_summary(aes(group = 1), geom = &quot;line&quot;, fun = mean, size=2) Podríamos obtener el mismo gráfico separado para hombres y mujeres usando de nuevo facet_wrap() ggplot(tolerance2, aes(x = age, y = tolerance, group = id)) + geom_line() + facet_wrap(~male) NOTA: En ggplot2 podemos guardar un gráfico con un nombre y luego reciclar el gráfico añadiendo más código de la siguiente manera. Por ejemplo, puedo guardar el gráfico anterior en el objeto p p &lt;- ggplot(tolerance2, aes(x = age, y = tolerance, group = id)) + geom_line(col=&quot;gray&quot;) + facet_wrap(~male) y luego decirle que me añada el perfir promedio: p + stat_summary(aes(group = 1), geom = &quot;line&quot;, fun = mean, size=2) "],["ModelosNormal.html", "Capítulo 5 Modelos con respuesta normal 5.1 Técnica de la suma de cuadrados 5.2 Respuesta Multivariante 5.3 Ejemplos 5.4 Ejercicios", " Capítulo 5 Modelos con respuesta normal En este capítulo se describirán los métodos y modelos estadísticos para analizar medidas respetidas cuando la variable respuesta sigue una distribución normal o gaussiana. Se pueden probar algunas transformaciones, como el logaritmo, para normalizar la distribución de la variable. 5.1 Técnica de la suma de cuadrados Este método o técnica se basa en la suma de cuadrados. Es la más simple desde el punto de vista estadístico y computacional. Por contra, sólo permite analizar diseños balanceados, sin variables independientes cuantitativas (covariables), sólo cualitativas o factores y con un número limitado de factores que tienen que estar cruzados (no anidados). A continuación se presentan los dos diseños más simples de medidas repetidas que se pueden analizar con esta técnica. 5.1.1 Diseño 1W+1B Cuando el diseño es balanceado (mismo número de individuos por grupo), las medidas son las mismas para todos los individuos y no hay covariables, se puede usar la técnica de suma de cuadrados o tabla ANOVA. La notación que se usa para la ecuación del modelo en el contexto de suma de cuadrados es: \\[y_{ijk} = \\mu + \\alpha_i + \\beta_j + \\alpha\\beta_{ij} + \\pi_{k(i)} + e_{ijk}\\] Donde \\(\\mu\\) es la constante del modelo, \\(\\alpha_i\\), son los efectos del grupo o tratamiento \\(\\beta_j\\), son los efectos del tiempo \\(\\alpha\\beta_{ij}\\) es la interacción del tiempo con el grupo \\(\\pi_{k(i)}\\) es el efecto aleatorio del individuo que está anidado al grupo \\(e_{ijk}\\) son los errores \\(\\sum_{i=1}^a \\alpha_i=0\\), \\(\\sum_{j=1}^b \\beta_j=0\\), \\(\\sum_{i=1}^a \\alpha\\beta_{ij}=0, \\forall j\\), \\(\\sum_{j=1}^b \\alpha\\beta_{ij}=0, \\forall i\\), \\(\\pi_{k(i)} \\sim N(0, \\sigma_{ind})\\) \\(e_{ijk} \\sim N(0, \\sigma)\\) indep En este contexto se dice que el tiempo y la interacción tratamiento:tiempo son términos o componentes intra sujeto (within subject). Mientras que el grupo es un componente entre sujeto (between subject). Por lo tanto, se trata de un diseño 1W+1B. Las técnicas clásicas de la tabla ANOVA y su inferencia són válidas siempre y cuando se cumpla la condición de esfericidad: la variancia de la diferencia entre dos medidas es constante. Para comprobar la condición de esfericidad se puede aplicar el test de Mauchly. Si no se cumple hay que corregir los grados de libertad de los términos intra sujetos de la tabla ANOVA y se recalculan sus p-valores. Hay dos métodos para corregir los grados de libertad: método Huynh and Feldt (H-F) y el método Greenhouse-Geisser (G-G) . 5.1.2 Diseño 1W Si en el diseño no hay grupos, luego el modelo se simplifica a un diseño de un solo factor intra sujeto (1W) \\[y_{ij} = \\mu + \\pi_i + \\beta_j + e_{ij}\\] En ambos casos, tanto en el diseño en que tenemos grupos (1W+1B) como en el que no (1W), no nos interesa evaluar el efecto del individuo; ya sabemos que hay variabilidad entre ellos. Veremos en un ejemplo como el paquete ez que se usará para esta técnica de suma de cuadrados omite los resultados sobre el factor aleatorio individuo. 5.1.3 Función ezANOVA Para ajustar los modelos de medidas repetidas balanceados mediante la técnica de suma de cuadrados existe la función ezANOVA del paquete ez [@R-ez] library(ez) Tanto la corrección por H-F o G-G, como el test de esfericidad de Mauchly estan implementados en el package ez de R. Para visualizar gráficamente los resultados, se usará la función ezPlot(). Más adelante en esta sección se verá en un ejemplo de ambas funciones. Para llevar a cabo los análisis ANOVA se usa la función ezANOVA () que tiene los siguientes argumentos: data: base de datos donde se encuentran las variables dv: variable respuesta o variable dependiente wid: variable individuo within: factor o factores intra sujeto. Típicamente en este argumento se espedificará el tiempo. Si se especifica más de un factor, éstos deben estar cruzados y se escribirá .(var1,var2). between: factor o factores entre sujetos. Si no hay ningún factor intra-sujeto se deja a NULL. Como en el argumento within, si hay más de un factor entre sujetos, éstos deben estar cruzados y se escribirá .(var1,var2). Observaciones: Los datos deben estar en formato vertical. La variable respuesta y los factores deben escribirse sin comillas. Los factores intra, entre y el sujeto deben estar en format factor. El factor individuo debe tener tantos niveles como individuos. Aunque en teoría la función permite covariables (variables independientes contínuas), esta opción está en versión beta. Todos los factores, excepto el individuo, deben ser de efectos fijos. 5.2 Respuesta Multivariante Esta metodología también conocida como MANOVA asume que las observaciones de cada individuo es un vector multivariante donde la variable respuesta se considera dicho vector. Podemos escribirlo de la siguiente forma: \\[\\vec{y}_i = \\vec{\\mu}_i + \\vec{e}_i\\] Donde \\(\\vec{y_i}=(y_{i1},\\ldots,y_{iT})\\) es el vector de medidas para el individuo \\(i\\). \\(\\vec{\\mu}_i=(\\mu_{i1},\\ldots,\\mu_{iT})\\) es el vector con las medias de cada momento y para cada individuo. Las medias pueden depender de las variables independientes \\(x_k\\). Fíjate que el coeficiente \\(\\beta_{kj}\\) puede ser diferente para cada momento. \\[\\mu_{ij} = \\sum_{k=1}^K \\beta_{jk} x_{ik}, \\quad j=1,...,T\\] \\(\\vec{e_i} \\sim N(\\vec{0},\\Sigma)\\), donde \\(\\Sigma\\) es la matrix de covarianzas de los errores y tiene que ser la misma para todos los individuos. Su estructura, pero, puede ser cualquiera. \\(x_{ik}\\) valor de la variable independiente \\(k\\) del individuo \\(i\\). Observaciones Para ajustar este modelo los datos se disponen de forma horizontal. En este modelo los tiempos en que se toman las \\(T\\) medidas tienen que ser los mismos para todos los individuos. Para estudiar la evolución en el tiempo se puede realizar un contraste polinómico en el vector de medias \\(\\vec{\\mu}\\). Para comparar grupos de medidas, por ejemplo si se tienen cinco medidas, las dos primeras corresponden al tratamiento A y las otras tres al tratamiento B, se puede realizar un contraste lineal para comparar los dos tratamientos. Cuando hay un valor faltante en alguna medida, toda la fila del individuo se tiene que eliminar. Cada variable independiente, \\(x_{ki}\\) es un único valor por individuo. O sea, que este modelo no contempla que las variables independientes sean de medidas repetidas. Si tuviéramos una variable que cambiara en el tiempo, se tienen que poner como variables diferentes (una para cada momento). Los factores contribuyen con tantas dummy variables como categorías menos uno en los términos \\(x_{ik}\\). Los términos \\(x_{ik}\\) pueden ser también interacciones entre variables, como el producto de sus términos. Datos Matriz de diseño ~ fumador + edad + sexo + edad:fumador indiv edad fumador sexo fumadorEx fumadorNunca edad sexomujer fumadorEx:edad fumadorNunca:edad 1 50 Ex mujer 1 0 50 1 50 0 2 55 Actual mujer 0 0 55 1 0 0 3 60 Actual hombre 0 0 60 0 0 0 4 65 Nunca mujer 0 1 65 1 0 65 5 62 Ex hombre 1 0 62 0 62 0 5.3 Ejemplos Vamos a ver algunos ejemplos que se analizarán mediante las técnicas que se acaban de describir. 5.3.1 Ejemplo 1 En la base de datos Ejemplo_1W.csv se tienen los datos de un diseño con 12 individuos en los que se toman los niveles en sangre de un cierto parámetro lipídico. Para cada invidivuo se miden los niveles a 1, 2 y 3 horas. datos &lt;- read.csv2(&quot;datos/Ejemplo_1W.csv&quot;) Ordenamos por individuo y dentro por tiempo dentro de individuo datos &lt;- arrange(datos, indiv, tiempo) 5.3.1.1 Exploración de los datos library(ggplot2) p &lt;- ggplot(data = datos, aes(x = tiempo, y = medida, group = indiv)) p + geom_line(col=&quot;grey&quot;) + stat_summary(aes(group = 1), geom = &quot;line&quot;, fun = mean, size=2) Cada línea representa a un individuo, mientras que la línea más gruesa es el promedio de los 12 individuos. Vemos como el efecto del tiempo no es del todo lineal. Además las líneas están bastante separadas indicando variabilidad entre los individuos. Comprobemos si tenemos algún inviduo con datos faltantes sum(with(datos, tapply(is.na(medida), indiv, any))) [1] 0 Como son datos balanceados, podemos usar ANOVA y MANOVA 5.3.1.2 Suma de cuadrados (ANOVA) Para ajustar este modelo hay que usar los datos en disposición vertical. Además, hay que convertir las variables tiempo e indiv a factor. library(ez) datos.ez &lt;- datos datos.ez$tiempo &lt;- factor(datos.ez$tiempo) datos.ez$indiv &lt;- factor(datos.ez$indiv) ezANOVA(data=datos.ez, dv=medida, wid=indiv, within=tiempo, detailed = TRUE) $ANOVA Effect DFn DFd SSn SSd F p p&lt;.05 ges 1 (Intercept) 1 11 66546.801 1892.0589 386.88796 6.390053e-10 * 0.9686088 2 tiempo 2 22 2166.376 264.6244 90.05264 2.542699e-11 * 0.5011210 $`Mauchly&#39;s Test for Sphericity` Effect W p p&lt;.05 2 tiempo 0.4433135 0.01712201 * $`Sphericity Corrections` Effect GGe p[GG] p[GG]&lt;.05 HFe p[HF] p[HF]&lt;.05 2 tiempo 0.6423901 5.662497e-08 * 0.6905331 1.998401e-08 * La condición de esfericidad no se cumple dado que el test de Mauchly es significativo. Por lo tanto, hay que corregir los grados de libertad y, en consecuencia, el p-valor del factor tiempo. Después de la corrección, éste sigue siendo significativo. Observación: Fíjate que los resultados son los mismos que usando la función lm, y anova con la opción test=\"Spherical\": modelo &lt;- lm(respuesta ~ 1, data=datosh) anova(modelo,X = ~1, test = &quot;Spherical&quot;) Analysis of Variance Table Contrasts orthogonal to ~1 Greenhouse-Geisser epsilon: 0.5782 Huynh-Feldt epsilon: 0.5895 Df F num Df den Df Pr(&gt;F) G-G Pr H-F Pr (Intercept) 1 28.573 2 46 8.5891e-09 5.8716e-06 4.9243e-06 Residuals 23 5.3.1.3 Modelo de respuesta multivariante (MANOVA) Para analizar los datos mediante el modelo de respuesta multivariante hay que disponer los datos de forma horizontal. datosh &lt;- dcast(datos, indiv ~ paste0(&quot;medida_&quot;, tiempo), value.var = &quot;medida&quot; ) datosh indiv medida_1 medida_2 medida_3 1 1 39.4 65.3 68.6 2 2 33.5 53.2 54.3 3 3 27.1 42.3 41.3 4 4 30.9 52.3 45.7 5 5 32.2 57.4 53.5 6 6 26.6 42.5 36.7 7 7 28.5 37.5 36.4 8 8 37.7 56.0 55.3 9 9 35.7 50.3 46.4 10 10 30.6 43.2 38.3 11 11 24.4 39.9 37.3 12 12 38.8 56.1 52.6 Para ajustar un modelo de regresión lineal con respuesta multivariante se puede usar la función lm. Y hay que poner la variable respuesta a la izquierda de ~ como una matriz de las tres variables (medida.1, medida.2 y medida.3): respuesta &lt;- as.matrix(datosh[,c(&quot;medida_1&quot;,&quot;medida_2&quot;,&quot;medida_3&quot;)]) modelo &lt;- lm(respuesta ~ 1, data=datosh) class(modelo) [1] &quot;mlm&quot; &quot;lm&quot; summary(modelo) Response medida_1 : Call: lm(formula = medida_1 ~ 1, data = datosh) Residuals: Min 1Q Median 3Q Max -7.7167 -3.9667 -0.5667 4.0833 7.2833 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 32.117 1.445 22.23 1.72e-10 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 5.006 on 11 degrees of freedom Response medida_2 : Call: lm(formula = medida_2 ~ 1, data = datosh) Residuals: Min 1Q Median 3Q Max -12.167 -7.217 1.633 6.358 15.633 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 49.667 2.456 20.22 4.75e-10 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 8.509 on 11 degrees of freedom Response medida_3 : Call: lm(formula = medida_3 ~ 1, data = datosh) Residuals: Min 1Q Median 3Q Max -10.80 -9.15 -1.15 6.50 21.40 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 47.200 2.867 16.47 4.25e-09 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 9.93 on 11 degrees of freedom Para obtener la matriz de covarianzas de los residuos: estVar(modelo) medida_1 medida_2 medida_3 medida_1 25.05970 36.58970 42.08727 medida_2 36.58970 72.39879 81.30000 medida_3 42.08727 81.30000 98.60364 Y a partir de la matriz de covarianzas, se puede calcular fácilmente la matriz de correlaciones de los residuos: cov2cor(estVar(modelo)) medida_1 medida_2 medida_3 medida_1 1.0000000 0.8590239 0.8466744 medida_2 0.8590239 1.0000000 0.9622290 medida_3 0.8466744 0.9622290 1.0000000 Para obtener los resultados se usa la función anova (?anova.mlm) anova(modelo, X = ~1, test = &quot;Pillai&quot;) Analysis of Variance Table Contrasts orthogonal to ~1 Df Pillai approx F num Df den Df Pr(&gt;F) (Intercept) 1 0.945 85.903 2 10 5.035e-07 *** Residuals 11 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Los estadísticos disponibles (argumento test) son: Pillai, Wilks, Hotelling-Lawley, Roy o Spherical. Con la opcion X=~1 se contrasta si \\(\\mu_1 = \\mu_2 = \\mu_3\\). En cambio la opción por defecto X = ~ 0, contrasta \\(\\mu_1 = \\mu_2 = \\mu_3=0\\) que no es de interés. El término (Intercept) corresponde al efecto del tiempo. Resultado Hay efecto del tiempo porque el p-valor &lt; 0.05. 5.3.2 Ejemplo 2 En la base de datos Ejemplo_1W1B.csv se tienen los datos de un estudio en el que participan 24 individuos randomizados en dos grupos de tratamiento (trat). Como en el anterior ejemplo, para cada invidivuo se miden los niveles a 1, 2 y 3 horas. datos &lt;- read.csv2(&quot;datos/Ejemplo_1W1B.csv&quot;) Como antes, ordenamos por individuo (de 1 a 24) y por tiempo datos &lt;- arrange(datos, indiv2, tiempo) Fíjate que hay dos variables que codifican al individuo: la variable indiv va de 1 a 12 que son los individuos que hay dentro de cada grupo de tratamiento, mientras que indiv2 va de 1 a 24 que son el total de individuos. 5.3.2.1 Exploración de los datos datos$trat &lt;- factor(datos$trat, 1:2, c(&quot;Control&quot;,&quot;Tratados&quot;)) library(ggplot2) p &lt;- ggplot(data = datos, aes(x = tiempo, y = medida, group = indiv2)) p &lt;- p + geom_line(col=&quot;grey&quot;) + stat_summary(aes(group = 1), geom = &quot;line&quot;, fun = mean, size=2) p + facet_grid( ~ trat) Para trat=1, la medida parece que no sube o sube muy poco. Mientras que para trat=2 sube mucho hasta la segunda medida y se estabiliza en la tercera medida. Por lo tanto, parece que sí hay una interacción entre el tiempo y el grupo de tratamiento. 5.3.2.2 Suma de cuadrados (ANOVA) Para ajustar este modelo hay que usar los datos en disposición vertical. Como antes hay que convertir las variables tiempo, indiv2 y trat a factor. library(ez) datos.ez &lt;- datos datos.ez$tiempo &lt;- factor(datos.ez$tiempo) datos.ez$indiv2 &lt;- factor(datos.ez$indiv2) datos.ez$trat &lt;- factor(datos.ez$trat) ezANOVA(data=datos.ez, dv=medida, wid=indiv, within=tiempo, between=trat, detailed = TRUE) $ANOVA Effect DFn DFd SSn SSd F p p&lt;.05 ges 1 (Intercept) 1 22 102808.4513 2849.9219 793.63083 9.363797e-19 * 0.9701554 2 trat 1 22 1952.0835 2849.9219 15.06913 8.040878e-04 * 0.3816578 3 tiempo 2 44 1397.0700 312.7422 98.27755 5.878117e-17 * 0.3063929 4 trat:tiempo 2 44 811.8211 312.7422 57.10794 5.921847e-13 * 0.2042582 $`Mauchly&#39;s Test for Sphericity` Effect W p p&lt;.05 3 tiempo 0.5725954 0.002866835 * 4 trat:tiempo 0.5725954 0.002866835 * $`Sphericity Corrections` Effect GGe p[GG] p[GG]&lt;.05 HFe p[HF] p[HF]&lt;.05 3 tiempo 0.7005722 1.520842e-12 * 0.7336894 4.932994e-13 * 4 trat:tiempo 0.7005722 1.003472e-09 * 0.7336894 4.400536e-10 * Vemos como se aplican las correcciones sólo en los términos intra sujeto que son tiempo y la interacción trat:tiempo, ya que el test de Mauchly es significativo (p-valor &lt; 0.05). Una vez aplicados las correcciones sobre los grados de libertad, los p-valores cambian aunque las conclusiones son las mismas: tanto el efecto del tiempo como su interacción con el tratamiento son significativos. ezPlot(data=datos.ez, dv=medida, wid=indiv, within=tiempo, between=trat, x=tiempo, split=trat) Las conclusiones con la tabla ANOVA corregida (tanto por GG como por HF), se ven claramente en el gráfico de interacción. 5.3.2.3 Modelo de respuesta multivariante (MANOVA) Para analizar los datos mediante el modelo de respuesta multivariante, como antes hay que disponer los datos de forma horizontal. datosh &lt;- dcast(datos, indiv + trat ~ paste0(&quot;medida_&quot;, tiempo), value.var = &quot;medida&quot; ) datosh indiv trat medida_1 medida_2 medida_3 1 1 Control 34.7 34.8 36.9 2 1 Tratados 39.4 65.3 68.6 3 2 Control 38.7 44.3 44.6 4 2 Tratados 33.5 53.2 54.3 5 3 Control 28.7 32.1 32.4 6 3 Tratados 27.1 42.3 41.3 7 4 Control 30.8 32.4 33.8 8 4 Tratados 30.9 52.3 45.7 9 5 Control 29.9 36.3 34.3 10 5 Tratados 32.2 57.4 53.5 11 6 Control 27.6 27.4 27.6 12 6 Tratados 26.6 42.5 36.7 13 7 Control 24.9 28.0 26.0 14 7 Tratados 28.5 37.5 36.4 15 8 Control 37.7 38.1 35.6 16 8 Tratados 37.7 56.0 55.3 17 9 Control 31.0 33.2 33.0 18 9 Tratados 35.7 50.3 46.4 19 10 Control 25.4 25.3 28.1 20 10 Tratados 30.6 43.2 38.3 21 11 Control 24.8 26.0 29.6 22 11 Tratados 24.4 39.9 37.3 23 12 Control 38.5 40.0 40.4 24 12 Tratados 38.8 56.1 52.6 respuesta &lt;- as.matrix(datosh[,c(&quot;medida_1&quot;,&quot;medida_2&quot;,&quot;medida_3&quot;)]) modelo &lt;- lm(respuesta ~ trat, data=datosh) summary(modelo) Response medida_1 : Call: lm(formula = medida_1 ~ trat, data = datosh) Residuals: Min 1Q Median 3Q Max -7.7167 -3.9667 -0.7083 4.1271 7.6417 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 31.058 1.476 21.048 4.57e-16 *** tratTratados 1.058 2.087 0.507 0.617 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 5.112 on 22 degrees of freedom Multiple R-squared: 0.01156, Adjusted R-squared: -0.03337 F-statistic: 0.2572 on 1 and 22 DF, p-value: 0.6171 Response medida_2 : Call: lm(formula = medida_2 ~ trat, data = datosh) Residuals: Min 1Q Median 3Q Max -12.1667 -6.6396 0.3375 5.2896 15.6333 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 33.158 2.113 15.692 1.98e-13 *** tratTratados 16.508 2.988 5.524 1.50e-05 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 7.32 on 22 degrees of freedom Multiple R-squared: 0.5811, Adjusted R-squared: 0.5621 F-statistic: 30.52 on 1 and 22 DF, p-value: 1.495e-05 Response medida_3 : Call: lm(formula = medida_3 ~ trat, data = datosh) Residuals: Min 1Q Median 3Q Max -10.8000 -5.9063 -0.6625 5.6250 21.4000 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 33.525 2.310 14.511 9.55e-13 *** tratTratados 13.675 3.267 4.186 0.000384 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 8.003 on 22 degrees of freedom Multiple R-squared: 0.4433, Adjusted R-squared: 0.418 F-statistic: 17.52 on 1 and 22 DF, p-value: 0.0003835 anova(modelo, X=~1) Analysis of Variance Table Contrasts orthogonal to ~1 Df Pillai approx F num Df den Df Pr(&gt;F) (Intercept) 1 0.88537 81.102 2 21 1.326e-10 *** trat 1 0.83628 53.633 2 21 5.599e-09 *** Residuals 22 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Con la instrucción summary, contrasta si la media es diferente entre los dos grupos de tratamiento, y esto lo hace para cada momento por separado. En la tabla ANOVA, el p-valor de término trat contrasta si el efecto del tiempo es el mismo para los dos tratamientos, o sea, la interacción tratamiento y tiempo, que es lo que nos interesa. Mientras que el término (Intercept) corresponde al efecto marginal del tiempo. Fíjate qué pasa si no se especifica el argumento X: anova(modelo) Analysis of Variance Table Df Pillai approx F num Df den Df Pr(&gt;F) (Intercept) 1 0.97752 289.829 3 20 &lt; 2.2e-16 *** trat 1 0.84439 36.176 3 20 2.854e-08 *** Residuals 22 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 En este caso, el p-valor del tratamiento contrasta si hay diferencias entre tratamientos en alguno de los momentos (hay 3 grados de libertad). Y este contraste no es la interacción entre tratamiento y tiempo. 5.3.3 Ejemplo 3 En un estudio se quieren comparar el efecto de régimen de ejercicio sobre el sobrepeso. Para ello se reclutan 100 personas. A la mitad se le asigna el régimen y al resto se le hacen algunas recomendaciones (grupo control). Se mide el índice de masa corporal justo antes de empezar el estudio (momento basal), y al cabo de 1, 2 y 3 semanas. Como la edad es una variable importante para predecir el IMC también se registra. Los datos los encontrarás en el fichero imc.csv En este ejemplo, vemos como en algunos de los individuos nos falta alguna medida en a partir de la primera semana. Por este motivo usaremos la técnica de los LMM. datos &lt;- read.csv2(&quot;datos/imc.csv&quot;) Nos aseguramos que los datos estén ordenados por individuo y tiempo datos &lt;- arrange(datos, indiv, tiempo) Recodificamos nuestra variable tratamiento: datos$tx &lt;- factor(datos$tx, 1:2, c(&quot;Control&quot;, &quot;Tratados&quot;)) summary(datos) respuesta indiv tiempo edad tx Min. : 9.80 Min. : 1.00 Min. :0.00 Min. :25.00 Control :200 1st Qu.:27.02 1st Qu.: 25.75 1st Qu.:0.75 1st Qu.:43.00 Tratados:200 Median :30.75 Median : 50.50 Median :1.50 Median :49.00 Mean :30.46 Mean : 50.50 Mean :1.50 Mean :49.03 3rd Qu.:34.60 3rd Qu.: 75.25 3rd Qu.:2.25 3rd Qu.:57.00 Max. :43.70 Max. :100.00 Max. :3.00 Max. :69.00 NA&#39;s :50 Comprobemos si tenemos algún inviduo con datos faltantes sum(with(datos, tapply(is.na(respuesta), indiv, any))) [1] 42 Como hay individuos con datos faltantes no podemos utilizar ANOVA o MANOVA y debemos usar modelos más avanzados que veremos más adelante. 5.4 Ejercicios 5.4.1 Ejercicio 1 Para estudiar las diferencias entre dos procedimientos diferentes de recuperación de pacientes de un infarto, se consideraron dos grupos experimentales en sendos hospitales, de 8 pacientes cada uno. La variable respuesta es el índice de Bartel, que varía entre 0 y 100, y que constituye una medida de la habilidad funcional con la que se valoran diferentes capacidades, de forma que valores más altos se corresponden con una mejor situación del paciente. De cada uno de los 16 pacientes se dispone de su respuesta cada semana a lo largo de 5 semanas consecutivas. Los datos se pueden encontrar en el archivo recuperainfarto.txt. El fichero contiene la información para cada individuo en una fila, la primera columna contiene la información del hostpital y las siguiente 5 columnas corresponden al valor del índice para cada semana. Carga los datos en R. Nombra a las columnas del data.frame con `c(hospital, bartel_1, bartel_2, bartel_3), bartel_4, bartel_5) Añade una columna (id) a los datos que corresponda al identificador cada individuo (usa 1, 2, 3,  16). Crea un data.frame con los datos en formato largo Crea una figura para visualizar la evolución en la respuesta a lo largo del tiempo para cada individuo. Crea una figura para mostrar si visualmente hay diferencias entre ambos procedimientos a lo largo del tiempo. ¿Qué procedimiento presenta una mejor recuperación de los pacientes? ¿Es esta diferencia estadísticamente significativa? 5.4.2 Ejercicio 2 En un estudio sobre la agudeza visual se dispone de la respuesta de siete individuos. La respuesta en cada ojo es el retraso en milisegundos entre la emisión de una luz y la respuesta en a la misma por el cortex. Cada ojo se somete a cuatro mediciones correspondientes a cuatro instantes consecutivos. Se tienen mediciones en el ojo izquierdo y derecho. Los datos se pueden encontrar en el archivo agudezavisual.txt Crea una nueva base de datos agregando la información para cada una de la medida repetida (ojo) [NOTA: toma la media - usa la función aggregate o cualquier otra que creas oportuna]. Usando esta nueva base de datos, contesta a las siguientes preguntas: Crea una figura para mostrar si visualmente hay diferencias en el retraso promedio de ambos ojos a lo largo del tiempo para cada individuo. ¿Existen diferencias entre la medición final y la basal? ¿Existe un efecto temporal en la respuesta? 5.4.3 Ejercicio 3 Los datos o2cons, disponibles en el paquete MANOVA.RM, contiene medidas sobre el consumo de oxígeno de los leucocitos (O2) de 144 individuos, 72 de ellos asignados al grupo control (Group=P) y el resto al grupo de tratamiento con Verum (Group=V). Además, para cada individuo se recoge si los estafilococos (Staphylococci) estaban activados o no (0/1). Para cada individuo se tomaron los niveles de oxígeno de los leucocitos después de 6, 12 y 18 minutos. Crea otro data.frame con los datos en formato ancho Haz una pequeña descriptiva de los datos contenidos en esta base de datos Analiza la evolución del consumo de oxígeno del grupo de tratamiento (Group=V). Crea una figura para mostrar si visualmente hay diferencias en la evolución del comsumo de =2 entre el grupo de intervención y el grupo de tratamiento. ¿Son estas diferencias estadísticamente significativas? Recuerda que los datos los puedes cargar mediante la instrucción library(MANOVA.RM) data(o2cons) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
